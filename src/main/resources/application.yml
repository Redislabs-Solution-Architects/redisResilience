logging:
    level:
        com:
            jphaugla: DEBUG
        org:
            springframework: INFO
    pattern:
        console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'

resilience4j.circuitbreaker:
    configs:
        default:
            automaticTransitionFromOpenToHalfOpenEnabled: true
            eventConsumerBufferSize: 10
            failureRateThreshold: 50
            minimumNumberOfCalls: 3
            permittedNumberOfCallsInHalfOpenState: 1000
            registerHealthIndicator: true
            slidingWindowSize: 10
            waitDurationInOpenState: 2000
            waitDurationInOpenStateInt: 2000
        shared:
            eventConsumerBufferSize: 10
            failureRateThreshold: 50
            permittedNumberOfCallsInHalfOpenState: 30
            slidingWindowSize: 100
            waitDurationInOpenState: 4000
    backends:
        backendA:
            automaticTransitionFromOpenToHalfOpenEnabled: true
            eventConsumerBufferSize: 10
            failureRateThreshold: 50
            minimumNumberOfCalls: 10
            permittedNumberOfCallsInHalfOpenState: 3
            registerHealthIndicator: true
            slidingWindowSize: 10
            waitDurationInOpenState: 4000
        backendB:
            automaticTransitionFromOpenToHalfOpenEnabled: true
            eventConsumerBufferSize: 10
            failureRateThreshold: 50
            minimumNumberOfCalls: 10
            permittedNumberOfCallsInHalfOpenState: 3
            registerHealthIndicator: true
            slidingWindowSize: 10
            waitDurationInOpenState: 4000
resilience4j.retry:
    configs:
        default:
            maxAttempts: 15
            waitDuration: 100
    instances:
        backendA:
            baseConfig: default
        backendB:
            baseConfig: default

spring:
    autoconfigure:
        exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
    redis:
        host: ${REDIS_HOST1}
        host2: ${REDIS_HOST2}
        port: ${REDIS_PORT1}
        port2: ${REDIS_PORT2}
        timeout: 1000ms
        testkey: testKey
        connectionLoopInterval: 1000
        waitafterfailover: 5000
management:
    endpoints:
        web:
            exposure:
                include: "*"
    metrics:
        export:
            atlas:
                enabled: false
